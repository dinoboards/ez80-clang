name: clang-tool-chain

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

permissions:
  contents: write  # Ensure the GITHUB_TOKEN has write permissions for contents

jobs:
  clang-tool-chain:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Source version.sh and set environment variables
        id: set-env-vars
        run: |
          source ./version.sh
          echo "EZ80_CLANG_TOOLCHAIN_VERSION=$EZ80_CLANG_TOOLCHAIN_VERSION" >> $GITHUB_ENV
          echo "EZ80_CLANG_VERSION=$EZ80_CLANG_VERSION" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: package clang and runtime
        run: |
          make download-llvm-release
          make
          make package

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Create Pre Release
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Last full release: $LATEST_TAG"
          RELEASE_NAME="Clang Pre Release ${{ env.EZ80_CLANG_VERSION }}"
          CHANGELOG_URL="https://github.com/dinoboards/ez80-clang/compare/${LATEST_TAG}...${{ github.sha }}"
          gh release create "${{ env.EZ80_CLANG_VERSION }}" "ez80-clang-${{ env.EZ80_CLANG_VERSION }}.tar.gz" --repo ${{ github.repository }} --title "$RELEASE_NAME" --prerelease --draft --notes "**Full Changelog**: $CHANGELOG_URL"

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_NAME="Clang Release $TAG_NAME"
          CHANGELOG_URL="https://github.com/dinoboards/ez80-clang/compare/${LATEST_TAG}...${TAG_NAME}"
          gh release create $TAG_NAME "ez80-clang-${{ env.EZ80_CLANG_VERSION }}.tar.gz" --repo ${{ github.repository }} --title "$RELEASE_NAME" --prerelease --notes "**Full Changelog**: $CHANGELOG_URL"
